#include<stdio.h>
#include<stdlib.h>
#include<time.h>
int a[5000],n;

void merge(int l, int mid, int h) {
    int n1 = l;
    int n2 = mid + 1;
    int k = l;
    int b[5000];
    
    while (n1 <= mid && n2 <= h) {
        if (a[n1] < a[n2]) {
            b[k] = a[n1];
            n1++;
        } else {
            b[k] = a[n2];
            n2++;
        }
        k++;
    }
    
    // Copy remaining elements from the first subarray
    while (n1 <= mid) {
        b[k] = a[n1];
        n1++;
        k++;
    }
    
    // Copy remaining elements from the second subarray
    while (n2 <= h) {
        b[k] = a[n2];
        n2++;
        k++;
    }
    
    // Copy elements back to the original array
    for (int i = l; i <= h; i++) {
        a[i] = b[i];
    }
}


void mergesort(int l,int h){
    int mid;
    if(l<h){
        mid=(l+h)/2;
        mergesort(l,mid);
        mergesort(mid+1,h);
        merge(l,mid,h);
        
    }
    
}
void main(){
    clock_t st,et;
    float ts;

    printf("Enter the no of elements");
    scanf("%d",&n);
    for(int i=0;i<n;i++){
       a[i]=rand()%100+1;
    }
printf("Before sorting");
 for(int i=0;i<n;i++){
       printf("%d\t",a[i]);
 }
 printf("\n");
st=clock();
mergesort(0,n-1);
et=clock();
ts=(float)(et-st)/CLOCKS_PER_SEC;

  printf("After sorting");
 for(int i=0;i<n;i++){
       printf("%d\t",a[i]);
 } 
printf("\n");
printf("Time taken is %f",ts);
    
    
}
